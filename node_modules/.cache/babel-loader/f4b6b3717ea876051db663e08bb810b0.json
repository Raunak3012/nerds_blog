{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\n\nconst useFetch = url => {\n  _s();\n\n  const [data, setData] = useState(null);\n  const [isFetched, setIsFetched] = useState(false);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const abortCont = new AbortController();\n    fetch(url, {\n      signal: abortCont.signal\n    }).then(res => {\n      if (!res.ok) {\n        throw Error(\"Could not fetch the data from the source\");\n      }\n\n      return res.json();\n    }).then(data => {\n      setData(data);\n      setIsFetched(true);\n      setError(null);\n    }).catch(err => {\n      if (err.name === 'AbortError') {\n        console.log(\"Abort Error\");\n      } else {\n        setError(err.message);\n        console.log(err);\n        setIsFetched(true);\n      }\n    });\n    return () => abortCont.abort();\n  }, [url]);\n  return {\n    data,\n    isFetched,\n    error\n  };\n};\n\n_s(useFetch, \"SiuQ8O4cRJcyhst5F19x21FQu+o=\");\n\nexport default useFetch;","map":{"version":3,"sources":["/Users/vivekpareek/Projects/ReactProjects/nerds_blog/src/useFetch.js"],"names":["useState","useEffect","useFetch","url","data","setData","isFetched","setIsFetched","error","setError","abortCont","AbortController","fetch","signal","then","res","ok","Error","json","catch","err","name","console","log","message","abort"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,MAAMC,QAAQ,GAAIC,GAAD,IAAS;AAAA;;AACtB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,IAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMS,SAAS,GAAG,IAAIC,eAAJ,EAAlB;AAEAC,IAAAA,KAAK,CAACT,GAAD,EAAM;AAACU,MAAAA,MAAM,EAAEH,SAAS,CAACG;AAAnB,KAAN,CAAL,CACKC,IADL,CACUC,GAAG,IAAI;AACT,UAAG,CAACA,GAAG,CAACC,EAAR,EACA;AACI,cAAMC,KAAK,CAAC,0CAAD,CAAX;AACH;;AACD,aAAOF,GAAG,CAACG,IAAJ,EAAP;AACH,KAPL,EAQKJ,IARL,CAQUV,IAAI,IAAI;AACVC,MAAAA,OAAO,CAACD,IAAD,CAAP;AACAG,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACAE,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACH,KAZL,EAaKU,KAbL,CAaWC,GAAG,IAAI;AACV,UAAGA,GAAG,CAACC,IAAJ,KAAa,YAAhB,EACA;AACIC,QAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACH,OAHD,MAKA;AACId,QAAAA,QAAQ,CAACW,GAAG,CAACI,OAAL,CAAR;AACAF,QAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AACAb,QAAAA,YAAY,CAAC,IAAD,CAAZ;AACH;AACJ,KAxBL;AA0BA,WAAO,MAAMG,SAAS,CAACe,KAAV,EAAb;AACH,GA9BQ,EA8BN,CAACtB,GAAD,CA9BM,CAAT;AAgCA,SAAO;AAACC,IAAAA,IAAD;AAAOE,IAAAA,SAAP;AAAkBE,IAAAA;AAAlB,GAAP;AACH,CAtCD;;GAAMN,Q;;AAwCN,eAAeA,QAAf","sourcesContent":["import { useState, useEffect } from 'react';\n\nconst useFetch = (url) => {\n    const [data, setData] = useState(null);\n    const [isFetched, setIsFetched] = useState(false);\n    const [error, setError] = useState(null) ;\n\n    useEffect(() => {\n        const abortCont = new AbortController();\n\n        fetch(url, {signal: abortCont.signal})\n            .then(res => {\n                if(!res.ok)\n                {\n                    throw Error(\"Could not fetch the data from the source\");\n                }\n                return res.json();\n            })\n            .then(data => {\n                setData(data); \n                setIsFetched(true);\n                setError(null);\n            })\n            .catch(err => {\n                if(err.name === 'AbortError')\n                {\n                    console.log(\"Abort Error\");\n                }\n                else\n                {\n                    setError(err.message);\n                    console.log(err);\n                    setIsFetched(true);\n                }\n            })\n        \n        return () => abortCont.abort();\n    }, [url]);\n\n    return {data, isFetched, error};\n}\n\nexport default useFetch;"]},"metadata":{},"sourceType":"module"}
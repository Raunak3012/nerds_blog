{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\n\nconst useFetch = url => {\n  _s();\n\n  const [data, setData] = useState(null);\n  const [isFetched, setIsFetched] = useState(false);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    fetch(url).then(res => {\n      if (!res.ok) {\n        throw Error(\"Could not fetch the data from the source\");\n      }\n\n      return res.json();\n    }).then(data => {\n      setData(data);\n      setIsFetched(true);\n      setError(null);\n    }).catch(err => {\n      setError(err.message);\n      console.log(err);\n      setIsFetched(true);\n    });\n    return () => {\n      console.log(\"Clean up\");\n    };\n  }, [url]);\n  return {\n    data,\n    isFetched,\n    error\n  };\n};\n\n_s(useFetch, \"SiuQ8O4cRJcyhst5F19x21FQu+o=\");\n\nexport default useFetch;","map":{"version":3,"sources":["/Users/vivekpareek/Projects/ReactProjects/react_demo/src/useFetch.js"],"names":["useState","useEffect","useFetch","url","data","setData","isFetched","setIsFetched","error","setError","fetch","then","res","ok","Error","json","catch","err","message","console","log"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,MAAMC,QAAQ,GAAIC,GAAD,IAAS;AAAA;;AACtB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,IAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,KAAK,CAACP,GAAD,CAAL,CACKQ,IADL,CACUC,GAAG,IAAI;AACT,UAAG,CAACA,GAAG,CAACC,EAAR,EACA;AACI,cAAMC,KAAK,CAAC,0CAAD,CAAX;AACH;;AACD,aAAOF,GAAG,CAACG,IAAJ,EAAP;AACH,KAPL,EAQKJ,IARL,CAQUP,IAAI,IAAI;AACVC,MAAAA,OAAO,CAACD,IAAD,CAAP;AACAG,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACAE,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACH,KAZL,EAaKO,KAbL,CAaWC,GAAG,IAAI;AACVR,MAAAA,QAAQ,CAACQ,GAAG,CAACC,OAAL,CAAR;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AACAV,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACH,KAjBL;AAkBA,WAAO,MAAM;AAACY,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AAAwB,KAAtC;AACH,GApBQ,EAoBN,CAACjB,GAAD,CApBM,CAAT;AAsBA,SAAO;AAACC,IAAAA,IAAD;AAAOE,IAAAA,SAAP;AAAkBE,IAAAA;AAAlB,GAAP;AACH,CA5BD;;GAAMN,Q;;AA8BN,eAAeA,QAAf","sourcesContent":["import { useState, useEffect } from 'react';\n\nconst useFetch = (url) => {\n    const [data, setData] = useState(null);\n    const [isFetched, setIsFetched] = useState(false);\n    const [error, setError] = useState(null) ;\n\n    useEffect(() => {\n        fetch(url)\n            .then(res => {\n                if(!res.ok)\n                {\n                    throw Error(\"Could not fetch the data from the source\");\n                }\n                return res.json();\n            })\n            .then(data => {\n                setData(data); \n                setIsFetched(true);\n                setError(null);\n            })\n            .catch(err => {\n                setError(err.message);\n                console.log(err);\n                setIsFetched(true);\n            })\n        return () => {console.log(\"Clean up\")}\n    }, [url]);\n\n    return {data, isFetched, error};\n}\n\nexport default useFetch;"]},"metadata":{},"sourceType":"module"}